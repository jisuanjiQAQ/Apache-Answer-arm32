name: 为 ARM32 交叉编译 Answer

on:
  workflow_dispatch:  # 用户发起构建请求时触发

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2  # 检出代码仓库

    - name: Install cross-compilation tools
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf make wget unzip

    - name: Install dependencies
      run: |
        sudo apt-get install -y cmake libssl-dev libncurses5-dev bison libaio-dev libboost-dev libboost-program-options-dev libboost-system-dev libboost-filesystem-dev 

    - name: Install Go
      uses: actions/setup-go@v2  # 设置Go环境
      with:
        go-version: '1.23'

    - name: Install wire
      run: |
        go install github.com/google/wire/cmd/wire@latest
        go install go.uber.org/mock/mockgen@latest

    - name: Install Node.js
      uses: actions/setup-node@v2  # 设置Node.js环境
      with:
        node-version: '20'

    - name: Install pnpm
      run: |
        npm i -g pnpm

    - name: Download source code
      run: |
        wget https://github.com/apache/answer/archive/refs/tags/v1.4.1.zip
        unzip v1.4.1.zip

    - name: Build
      run: |
        export CC=arm-linux-gnueabihf-gcc
        export CXX=arm-linux-gnueabihf-g++
        export AR=arm-linux-gnueabihf-ar
        export AS=arm-linux-gnueabihf-as
        export LD=arm-linux-gnueabihf-ld
        export NM=arm-linux-gnueabihf-nm
        export RANLIB=arm-linux-gnueabihf-ranlib
        export STRIP=arm-linux-gnueabihf-strip
        export GOARCH=arm
        export GOARM=7
        cd answer-1.4.1
        npm install -g update-browserslist-db@latest
        make generate
        make ui
        make build
        pwd

    - name: Compress build artifacts
      run: |
       tar -czf Answer-arm32.tar.gz answer

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1  # 创建GitHub发行版
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.4.1-${{ github.run_number }}
        release_name: Release v1.4.1-${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1  # 上传发行版资源
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Answer-arm32.tar.gz
        asset_name: Answer-arm32.tar.gz
        asset_content_type: application/gzip
